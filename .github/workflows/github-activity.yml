name: Update GitHub Activity SVG

on:
  schedule:
    # Run daily (03:07 UTC) — tweak as you like
    - cron: "7 3 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          echo "GH_USER=evanniko1" >> $GITHUB_ENV
          echo "DEST=images" >> $GITHUB_ENV

      - name: Ensure folders exist
        run: |
          mkdir -p "$DEST/_tmp"

      - name: Download GitHub contributions page
        run: |
          curl -fsSL \
            -A "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0 Safari/537.36" \
            -H "Accept: text/html,*/*" \
            -H "Accept-Language: en" \
            "https://github.com/users/${GH_USER}/contributions" \
            -o "$DEST/_tmp/contrib.html"

      - name: Extract ONLY the calendar <svg>
        shell: bash
        run: |
          set -euo pipefail
          SRC="$DEST/_tmp/contrib.html"
          OUT_L="$DEST/github-activity-light.svg"
          OUT_D="$DEST/github-activity-dark.svg"

          # 1) Primary anchor (most stable on GitHub):
          start_line=$(grep -n 'js-calendar-graph-svg' "$SRC" | head -n1 | cut -d: -f1 || true)

          # 2) Fallbacks if class changes:
          if [ -z "${start_line}" ]; then
            start_line=$(grep -n 'data-color-scale' "$SRC" | head -n1 | cut -d: -f1 || true)
          fi
          if [ -z "${start_line}" ]; then
            start_line=$(grep -n 'role="img"' "$SRC" | head -n1 | cut -d: -f1 || true)
          fi
          if [ -z "${start_line}" ]; then
            start_line=$(grep -n '<svg' "$SRC" | head -n1 | cut -d: -f1 || true)
          fi

          if [ -z "${start_line}" ]; then
            echo "ERROR: Could not locate the calendar SVG in the GitHub HTML."
            exit 1
          fi

          # Emit exactly one <svg>…</svg> block from the anchor line forward
          tail -n +"${start_line}" "$SRC" \
            | awk 'match($0,/<svg[^>]*>/){p=1} p{print} /<\/svg>/{exit}' \
            > "$OUT_L"

          # Add XML header if missing (some viewers choke without it)
          if ! head -n1 "$OUT_L" | grep -q '^<\?xml'; then
            sed -i '1s|^|<?xml version="1.0" encoding="UTF-8"?>\n|' "$OUT_L"
          fi

          # Create a dark variant you can theme-switch if desired.
          cp "$OUT_L" "$OUT_D"

      - name: Commit updated SVGs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$DEST/github-activity-light.svg" "$DEST/github-activity-dark.svg"
          git commit -m "chore: refresh GitHub activity SVGs" || echo "No changes to commit"
          git push
